version: '3.8'
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile.dev
        ports:
            - '3001:3000'
        volumes:
            - ./src:/app/src
            - ./node_modules:/app/node_modules
        depends_on:
            - mongo
            - minio
            - kafka
        environment:
            - ENTRY_SCRIPT=src/index.ts api
            - PORT=3000
            - DB_URI=mongodb://mongo:27017/meuprojeto
            - KAFKA_HOST=kafka:9092
            - AWS_S3_ENDPOINT=http://minio:9000
            - AWS_S3_ACCESS_KEY=13DUPXMWr7BfVsUg9ErL
            - AWS_S3_SECRET_KEY=eoxnQNI7nOWKCGaOgcF19yIXjUUqoQRBmTlwaP1M

    consumer-rent:
        build:
            context: .
            dockerfile: Dockerfile.dev
        volumes:
            - ./src:/app/src
            - ./node_modules:/app/node_modules
        depends_on:
            - mongo
            - kafka
            - minio
        environment:
            - ENTRY_SCRIPT=src/index.ts consumer
            - PORT=3000
            - DB_URI=mongodb://mongo:27017/meuprojeto
            - KAFKA_HOST=kafka:9092
            - AWS_S3_ENDPOINT=http://minio:9000
            - AWS_S3_ACCESS_KEY=uTAz0cVlnY0gvrx5mAku
            - AWS_S3_SECRET_KEY=4pvGu3ssVdJZD5RSCWMbuRvxJFF8eA1lEAVCERAA

    mongo:
        image: mongo:latest
        ports:
            - '27017:27017'
        volumes:
            - mongodb_data:/data/db
        environment:
            - MONGO_INITDB_DATABASE=meuprojeto

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        ports:
            - '2181:2181'
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181

    kafka:
        image: confluentinc/cp-kafka:latest
        ports:
            - '9092:9092'
        depends_on:
            - zookeeper
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

    kafdrop:
        image: obsidiandynamics/kafdrop
        depends_on:
            - kafka
        ports:
            - '19000:9000'
        environment:
            - KAFKA_BROKERCONNECT=kafka:9092

    minio:
        image: minio/minio
        ports:
            - '9001:9001'
        volumes:
            - minio_data:/data
        environment:
            - MINIO_ROOT_USER=minioadmin
            - MINIO_ROOT_PASSWORD=minioadmin
        command: server /data --console-address ":9001"

volumes:
    mongodb_data:
    minio_data:
